{
  "name": "LLM C++ Toolkit",
  "dockerFile": "Dockerfile",
  "target": "dev",
  "context": "..",

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        // C++ support
        "ms-vscode.cpptools",
        "ms-vscode.cmake-tools",
        "llvm-vs-code-extensions.vscode-clangd",

        // Python support
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.isort",

        // General development
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "tamasfe.even-better-toml",

        // Git
        "eamodio.gitlens",

        // Shell scripting
        "timonwong.shellcheck",
        "foxundermoon.shell-format",

        // Documentation
        "yzhang.markdown-all-in-one",
        "DavidAnson.vscode-markdownlint"
      ],

      "settings": {
        "C_Cpp.default.compilerPath": "/usr/bin/clang++",
        "C_Cpp.default.cStandard": "c17",
        "C_Cpp.default.cppStandard": "c++20",
        "C_Cpp.default.intelliSenseMode": "linux-clang-x64",
        "C_Cpp.default.compileCommands": "${workspaceFolder}/exports/compile_commands.json",

        "clangd.path": "/usr/bin/clangd",
        "clangd.arguments": [
          "--header-insertion=iwyu",
          "--completion-style=detailed",
          "--function-arg-placeholders=false"
        ],

        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.ruffEnabled": true,

        "files.associations": {
          "*.yaml": "yaml",
          "*.yml": "yaml"
        },

        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.shell.linux": "/bin/bash"
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "llmtk doctor && echo 'Development environment ready!'",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "root",

  // Set environment variables
  "containerEnv": {
    "LLMTK_DIR": "/opt/llmtk"
  },

  // Mount the workspace
  "mounts": [
    "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
  ],

  // Development features
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "upgradePackages": true,
      "username": "vscode",
      "userUid": "automatic",
      "userGid": "automatic"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    }
  },

  // Lifecycle scripts
  "initializeCommand": "echo 'Initializing LLM C++ Toolkit development container...'",
  "onCreateCommand": [
    "bash", "-c",
    "cd /opt/llmtk && llmtk install --local && llmtk doctor"
  ],
  "updateContentCommand": [
    "bash", "-c",
    "cd /opt/llmtk && git pull && llmtk doctor"
  ],

  // Working directory
  "workspaceFolder": "/workspace",

  // Additional run arguments
  "runArgs": [
    "--cap-add=SYS_PTRACE",
    "--security-opt", "seccomp=unconfined"
  ]
}